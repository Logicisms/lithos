//
//  Project config
//

$settings: (
    namespacing: (
        prefixes: (
            object:                 'o-',
            component:              'c-',
            utility:                'u-',
            scope:                  's-',
            
            state:                  'is-',
            state-within:           'has-',
            
            hack:                   '\*\*',
            javascript:             'js-',
        ),
        delimiters: (
            element:                '__',
            modifier:               '--',
            responsive:             \@,
        ),
    ),
    
    typography: (
        browser-context:        16px,
        
        font-sizes: (
            //  "static" sizes, should be in 'rem'.
            normal:                 1.6rem,
            
            //  "responsive" sizes, should be in '%' or 'em'.
            smaller:                85%,
            larger:                 115%,
        ),
        font-faces: (
            open-sans: (
                font-family:            "Open Sans",
                src: (
                    url("/fonts/OpenSans-Regular-webfont.woff2") format("woff2"),
                    url("/fonts/OpenSans-Regular-webfont.woff") format("woff")
                ),
            ),
        ),
        font-stacks: (
            sans-serif:             ("Helvetica Neue", Helvetica, sans-serif),
            serif:                  ("Times New Roman", Times, serif),
            monospace:              ("Lucida Console", Monaco, monospace),
        ),
        
        font-family:            sans-serif,
        line-height:            1.75,
        
        //  determines the value (in ems) by which headings h1-h6 are scaled
        //  relative to font-size.
        heading-scale-ratio:    0.32em,
    ),
    
    layout: (
        //  if 'type-based-grid' is true, this gutter will be ignored.
        gutter:                 1.75em,
        
        grid-columns:           12,
        
        breakpoints: (
            small: (
                max-width:          64rem,
            ),
            medium: (
                min-width:          64.1rem,
            ),
            large: (
                min-width:          102.4rem,
            ),
            retina: (
                min-device-pixel-ratio: 2,
                min-resolution:     192dpi,
            ),
        ),
        class-breakpoints:      3,
        
        z-indices: (
            default:                1,
        ),
    ),
    
    utilities: (
        //  Transform
        rotation-grades: (
            45, 90, 180, 270, 360,
        ),
        
        //  Typography
        font-scale: (
            namespace:              'font-size',
            
            start:                  1,
            end:                    10,
        ),
        font-scale-start:       1,
        font-scale-end:         10,
    ),
    
    single-property-utils: (
        flex-direction: (
            property:               'flex-direction',
            values: (
                column, row,
            ),
        ),
        flex-align: (
            property:               'align-content',
            values: (
                center, flex-start, flex-end, space-around, space-between, stretch,
            ),
        ),
        flex-justify: (
            property:               'justify-content',
            values: (
                center, flex-start, flex-end, space-around, space-between,
            ),
        ),
//        flex-align-self: (
//            property:               'align-self',
//            values: (
//                center, flex-start, flex-end, space-around, space-between, stretch,
//            ),
//        ),
    ),
    
    features: (
        //  'true' to outline affected elements when a mixin is passed invalid arguments.
        visual-debugging:       true,

        //  'true' to apply color-coded outlines to namespaced entities.
        health-check:           false,

        //  'true' to @debug print a count of namespaced scopes on compile.
        scope-index:            false,
        
        //  'true' to nest BEM elements to their parent blocks.
        nested-bem:             true,
        
        //  'true' to base project gutter and vertical spacing on line-height.
        type-based-grid:        true,
        
        //  'true' to output CSS reset.
        reset-css:              true,
        
        //  'true' to reset :focus styles. WARNING: if 'true', implement custom styles to preserve accessibility.
        reset-focus:            false,
        
        //   'true' to remove all user agent button styles, rendering them as plain text.
        hard-reset-buttons:     true,
        
        //  'true' to output a configurable grid system.
        grid-system:            true,
        
        //  'true' to use flexbox rules instead of floats in grid system.
        flexbox-grid:           true,
        
        //  'true' to build grid system with media queries as defined in config.
        responsive-grid:        true,
        
        //  'true' to output a set of miscellaneous ascii emotes usable as icons. e.g. ¯\_(ツ)_/¯
        ascii-emotes:           true,
        
        //  'true' will output utility class values as '!important'.
        important-utils:        true,
        
        //  'true' to output visibility-affecting utilities for 'hidden' and 'visible'.
        visibility-utils:       true,
        
        //  'true' to output a set of flexbox helper utilities.
        flexbox-utils:          true,
        
        //  'true' to output a set of responsive clearfix formatting hack utilities. 
        clearfix-utils:         true,
        
        //  'true' to output width-affecting 'span' utilities that correspond with the grid.
        grid-span-utils:        true,
        
        //  'true to output font-resizing utilities as configured.
        font-scale-utils:       true,
        
        //  'true' to output font-resizing utilities corresponding to the h1-6 headings.
        heading-utils:          true,
        
        //  'true' to output a stylesheet for printed media, based on the HTML5 boilerplate.
        print-media:            true,
    ),
);

